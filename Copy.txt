import React, { useEffect, useState } from 'react';
import { connect } from 'react-redux';
import { getToken } from '../redux/selectors';
import { fetchUserProfile, updateUserProfile } from '../redux/actions/userActions';
import { getUserProfile, getUserLoading, getUserError } from '../redux/selectors';
import '../css/Profile.css';
 
const Profile = ({ profile, loading, error, fetchUserProfile, updateUserProfile, token }) => {
  const [editMode, setEditMode] = useState(false);
  const token = useSelector(getToken);
  const [formData, setFormData] = useState({
    firstname: '',
    lastname: '',
    email: '',
    city: '',
    state: '',
    country: '',
    department: '',
    phnno: '',
  });
 
  useEffect(() => {
    fetchUserProfile(token);
  }, [fetchUserProfile, token]);
 
  useEffect(() => {
    if (profile) {
      setFormData(profile);
    }
  }, [profile]);
 
  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };
 
  const handleSubmit = (e) => {
    e.preventDefault();
    updateUserProfile(formData, token);
    setEditMode(false);
  };
 
  if (loading) return <p className="loading">Loading profile...</p>;
  if (error) return <p className="error">{error}</p>;
 
  return (
    <div className="profile-container">
      <h2 className="profile-heading">User Profile</h2>
 
      {!editMode ? (
        <div className="profile-details">
          <p><strong>First Name:</strong> {profile?.firstname}</p>
          <p><strong>Last Name:</strong> {profile?.lastname}</p>
          <p><strong>Email:</strong> {profile?.email}</p>
          <p><strong>City:</strong> {profile?.city}</p>
          <p><strong>State:</strong> {profile?.state}</p>
          <p><strong>Country:</strong> {profile?.country}</p>
          <p><strong>Department:</strong> {profile?.department}</p>
          <p><strong>Phone Number:</strong> {profile?.phnno}</p>
          <button className="btn-edit" onClick={() => setEditMode(true)}>Edit Profile</button>
        </div>
      ) : (
        <form className="profile-form" onSubmit={handleSubmit}>
          <input type="text" name="firstname" value={formData.firstname} onChange={handleChange} placeholder="First Name" />
          <input type="text" name="lastname" value={formData.lastname} onChange={handleChange} placeholder="Last Name" />
          <input type="email" name="email" value={formData.email} onChange={handleChange} placeholder="Email" />
          <input type="text" name="city" value={formData.city} onChange={handleChange} placeholder="City" />
          <input type="text" name="state" value={formData.state} onChange={handleChange} placeholder="State" />
          <input type="text" name="country" value={formData.country} onChange={handleChange} placeholder="Country" />
          <input type="text" name="department" value={formData.department} onChange={handleChange} placeholder="Department" />
          <input type="text" name="phnno" value={formData.phnno} onChange={handleChange} placeholder="Phone Number" />
          <button type="submit" className="btn-save">Save</button>
          <button type="button" className="btn-cancel" onClick={() => setEditMode(false)}>Cancel</button>
        </form>
      )}
    </div>
  );
};
 
const mapStateToProps = (state) => ({
  profile: getUserProfile(state),
  loading: getUserLoading(state),
  error: getUserError(state),
});
 
export default connect(mapStateToProps, { fetchUserProfile, updateUserProfile })(Profile);
