package com.example.ems.controller;

import com.example.ems.dto.UserDto;
import com.example.ems.entity.User;
import com.example.ems.service.UserService;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/users")
public class UserController {

    @Autowired
    private UserService userService;

    // Only ADMIN can create a new user
    @PostMapping
    @PreAuthorize("hasRole('ADMIN')")
    public User createUser(@Valid @RequestBody UserDto userDto) {
        return userService.createUser(userDto);
    }

    // Get profile of the current user (employee or admin)
    @GetMapping("/profile")
    public User getProfile(HttpServletRequest request) {
        String email = (String) request.getAttribute("email");
        return userService.getUserByEmail(email);
    }

    // Update profile of the current user
    @PutMapping("/profile")
    public User updateProfile(@RequestBody UserDto userDto, HttpServletRequest request) {
        String email = (String) request.getAttribute("email");
        User user = userService.getUserByEmail(email);
        user.setEmail(userDto.email());
        user.setPassword(userDto.password());
        user.setRole(userDto.role()); // This should match enum Role
        return userService.saveUser(user);
    }
}
