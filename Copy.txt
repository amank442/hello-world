const axios = require('axios');
const { handleAxiosError } = require('../utils/errorHandler');
const env = require('../config/env');
 
const getUserProfile = async (req, res) => {
  try {
    const response = await axios.get(`${env.SPRING_BOOT_API}/api/users/profile`, {
      headers: { Authorization: req.headers.authorization },
    });
    res.status(response.status).json(response.data);
  } catch (error) {
    handleAxiosError(error, res);
  }
};
 
const updateUserProfile = async (req, res) => {
  try {
    const response = await axios.put(`${env.SPRING_BOOT_API}/api/users/profile`, req.body, {
      headers: { Authorization: req.headers.authorization },
    });
    res.status(response.status).json(response.data);
  } catch (error) {
    handleAxiosError(error, res);
  }
};
 
// Add the new controller function for adding users
const addUser = async (req, res) => {
  try {
    const response = await axios.post(`${env.SPRING_BOOT_API}/api/users`, req.body, {
      headers: { Authorization: req.headers.authorization },
     
    });
    console.log('Request headers:', { Authorization: req.headers.authorization });
    res.status(response.status).json(response.data);
  } catch (error) {
    console.log('Error forwarding to Spring Boot:', error.response?.status, error.response?.data);
    handleAxiosError(error, res);
  }
};
 
module.exports = { getUserProfile, updateUserProfile, addUser };
 
