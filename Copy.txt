Here’s your Daily Learning Report for ConfigMap and Secret in Kubernetes (theoretical learning):


---

Daily Learning Report

Date: 21st April 2025
Name: Aman Kumar
Learning Track: DevOps – Kubernetes Fundamentals
Topic Covered: ConfigMap and Secret in Kubernetes


---

1. Objective of the Day

To understand how ConfigMap and Secret objects are used in Kubernetes to externalize configuration data and secure sensitive information, keeping applications flexible and secure.


---

2. Topics Covered

A. What is a ConfigMap?

A ConfigMap is a Kubernetes object used to store non-sensitive configuration data (key-value pairs).

Helps keep configuration separate from container images.

Used for:

Environment variables

Command-line arguments

Configuration files mounted inside Pods



Example use case:
Defining a database host or environment name (ENV=dev) outside the image.


---

B. Key Features of ConfigMap

Can be created using a file, literal values, or YAML.

Can be injected:

As environment variables

As files inside a volume

Directly inside the container's command




---

C. What is a Secret?

A Secret is used to store sensitive data like:

Passwords

API keys

TLS certificates


Secrets are base64-encoded, not encrypted by default (though encryption at rest is supported via cluster config).



---

D. Key Features of Secret

More secure than ConfigMap for sensitive information.

Used similarly as ConfigMap:

Injected as environment variables

Mounted as volumes




---

E. Differences: ConfigMap vs Secret


---

F. Sample YAML Snippets

ConfigMap

apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
data:
  ENV: dev
  LOG_LEVEL: debug

Secret

apiVersion: v1
kind: Secret
metadata:
  name: db-secret
type: Opaque
data:
  username: YWRtaW4=    # base64 for 'admin'
  password: cGFzc3dvcmQ=  # base64 for 'password'


---

3. Activities Done

Focused on theory only today.

Read official Kubernetes docs and watched explainer videos to understand how ConfigMaps and Secrets are applied in Pods.



---

4. Learnings & Takeaways

ConfigMaps improve application flexibility and environment separation.

Secrets provide confidentiality and better control for critical values.

Understanding the differences helps in designing secure, maintainable deployments.



---

5. Plan for Next Day

Perform practicals on:

Creating ConfigMap and Secret via kubectl

Injecting them into a Pod and viewing logs

Mounting secrets securely




---

Would you like a checklist of kubectl commands to use when you try this practically tomorrow?

